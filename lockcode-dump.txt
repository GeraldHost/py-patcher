
lockcode:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    rsp,0x8
    1008:	48 8b 05 d9 2f 00 00 	mov    rax,QWORD PTR [rip+0x2fd9]        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   rax,rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   rax
    1016:	48 83 c4 08          	add    rsp,0x8
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 8a 2f 00 00    	push   QWORD PTR [rip+0x2f8a]        # 3fb0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 8b 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f8b]        # 3fb8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nop    DWORD PTR [rax]
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <.plt>
    105f:	90                   	nop

Disassembly of section .plt.got:

0000000000001060 <__cxa_finalize@plt>:
    1060:	f3 0f 1e fa          	endbr64 
    1064:	f2 ff 25 8d 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f8d]        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    106b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

0000000000001070 <puts@plt>:
    1070:	f3 0f 1e fa          	endbr64 
    1074:	f2 ff 25 45 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f45]        # 3fc0 <puts@GLIBC_2.2.5>
    107b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001080 <strlen@plt>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	f2 ff 25 3d 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f3d]        # 3fc8 <strlen@GLIBC_2.2.5>
    108b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001090 <__stack_chk_fail@plt>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	f2 ff 25 35 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f35]        # 3fd0 <__stack_chk_fail@GLIBC_2.4>
    109b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000000010a0 <_start>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	31 ed                	xor    ebp,ebp
    10a6:	49 89 d1             	mov    r9,rdx
    10a9:	5e                   	pop    rsi
    10aa:	48 89 e2             	mov    rdx,rsp
    10ad:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    10b1:	50                   	push   rax
    10b2:	54                   	push   rsp
    10b3:	4c 8d 05 c6 02 00 00 	lea    r8,[rip+0x2c6]        # 1380 <__libc_csu_fini>
    10ba:	48 8d 0d 4f 02 00 00 	lea    rcx,[rip+0x24f]        # 1310 <__libc_csu_init>
    10c1:	48 8d 3d 4e 01 00 00 	lea    rdi,[rip+0x14e]        # 1216 <main>
    10c8:	ff 15 12 2f 00 00    	call   QWORD PTR [rip+0x2f12]        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    10ce:	f4                   	hlt    
    10cf:	90                   	nop

00000000000010d0 <deregister_tm_clones>:
    10d0:	48 8d 3d 39 2f 00 00 	lea    rdi,[rip+0x2f39]        # 4010 <__TMC_END__>
    10d7:	48 8d 05 32 2f 00 00 	lea    rax,[rip+0x2f32]        # 4010 <__TMC_END__>
    10de:	48 39 f8             	cmp    rax,rdi
    10e1:	74 15                	je     10f8 <deregister_tm_clones+0x28>
    10e3:	48 8b 05 ee 2e 00 00 	mov    rax,QWORD PTR [rip+0x2eee]        # 3fd8 <_ITM_deregisterTMCloneTable>
    10ea:	48 85 c0             	test   rax,rax
    10ed:	74 09                	je     10f8 <deregister_tm_clones+0x28>
    10ef:	ff e0                	jmp    rax
    10f1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    10f8:	c3                   	ret    
    10f9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001100 <register_tm_clones>:
    1100:	48 8d 3d 09 2f 00 00 	lea    rdi,[rip+0x2f09]        # 4010 <__TMC_END__>
    1107:	48 8d 35 02 2f 00 00 	lea    rsi,[rip+0x2f02]        # 4010 <__TMC_END__>
    110e:	48 29 fe             	sub    rsi,rdi
    1111:	48 89 f0             	mov    rax,rsi
    1114:	48 c1 ee 3f          	shr    rsi,0x3f
    1118:	48 c1 f8 03          	sar    rax,0x3
    111c:	48 01 c6             	add    rsi,rax
    111f:	48 d1 fe             	sar    rsi,1
    1122:	74 14                	je     1138 <register_tm_clones+0x38>
    1124:	48 8b 05 c5 2e 00 00 	mov    rax,QWORD PTR [rip+0x2ec5]        # 3ff0 <_ITM_registerTMCloneTable>
    112b:	48 85 c0             	test   rax,rax
    112e:	74 08                	je     1138 <register_tm_clones+0x38>
    1130:	ff e0                	jmp    rax
    1132:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    1138:	c3                   	ret    
    1139:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001140 <__do_global_dtors_aux>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	80 3d c5 2e 00 00 00 	cmp    BYTE PTR [rip+0x2ec5],0x0        # 4010 <__TMC_END__>
    114b:	75 2b                	jne    1178 <__do_global_dtors_aux+0x38>
    114d:	55                   	push   rbp
    114e:	48 83 3d a2 2e 00 00 	cmp    QWORD PTR [rip+0x2ea2],0x0        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1155:	00 
    1156:	48 89 e5             	mov    rbp,rsp
    1159:	74 0c                	je     1167 <__do_global_dtors_aux+0x27>
    115b:	48 8b 3d a6 2e 00 00 	mov    rdi,QWORD PTR [rip+0x2ea6]        # 4008 <__dso_handle>
    1162:	e8 f9 fe ff ff       	call   1060 <__cxa_finalize@plt>
    1167:	e8 64 ff ff ff       	call   10d0 <deregister_tm_clones>
    116c:	c6 05 9d 2e 00 00 01 	mov    BYTE PTR [rip+0x2e9d],0x1        # 4010 <__TMC_END__>
    1173:	5d                   	pop    rbp
    1174:	c3                   	ret    
    1175:	0f 1f 00             	nop    DWORD PTR [rax]
    1178:	c3                   	ret    
    1179:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001180 <frame_dummy>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	e9 77 ff ff ff       	jmp    1100 <register_tm_clones>

0000000000001189 <val>:
    1189:	f3 0f 1e fa          	endbr64 
    118d:	55                   	push   rbp
    118e:	48 89 e5             	mov    rbp,rsp
    1191:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    1194:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    1198:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [rbp-0x8],0x0
    119f:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    11a6:	eb 1a                	jmp    11c2 <val+0x39>
    11a8:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    11ab:	48 63 d0             	movsxd rdx,eax
    11ae:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    11b2:	48 01 d0             	add    rax,rdx
    11b5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    11b8:	0f be c0             	movsx  eax,al
    11bb:	01 45 f8             	add    DWORD PTR [rbp-0x8],eax
    11be:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    11c2:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    11c5:	3b 45 ec             	cmp    eax,DWORD PTR [rbp-0x14]
    11c8:	7c de                	jl     11a8 <val+0x1f>
    11ca:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
    11cd:	5d                   	pop    rbp
    11ce:	c3                   	ret    

00000000000011cf <res>:
    11cf:	f3 0f 1e fa          	endbr64 
    11d3:	55                   	push   rbp
    11d4:	48 89 e5             	mov    rbp,rsp
    11d7:	48 83 ec 10          	sub    rsp,0x10
    11db:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
    11de:	89 75 f8             	mov    DWORD PTR [rbp-0x8],esi
    11e1:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    11e5:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    11e8:	2b 45 f8             	sub    eax,DWORD PTR [rbp-0x8]
    11eb:	83 f8 01             	cmp    eax,0x1
    11ee:	75 13                	jne    1203 <res+0x34>
    11f0:	48 8d 3d 11 0e 00 00 	lea    rdi,[rip+0xe11]        # 2008 <_IO_stdin_used+0x8>
    11f7:	e8 74 fe ff ff       	call   1070 <puts@plt>
    11fc:	b8 00 00 00 00       	mov    eax,0x0
    1201:	eb 11                	jmp    1214 <res+0x45>
    1203:	48 8d 3d 2e 0e 00 00 	lea    rdi,[rip+0xe2e]        # 2038 <_IO_stdin_used+0x38>
    120a:	e8 61 fe ff ff       	call   1070 <puts@plt>
    120f:	b8 01 00 00 00       	mov    eax,0x1
    1214:	c9                   	leave  
    1215:	c3                   	ret    

0000000000001216 <main>:
    1216:	f3 0f 1e fa          	endbr64 
    121a:	55                   	push   rbp
    121b:	48 89 e5             	mov    rbp,rsp
    121e:	53                   	push   rbx
    121f:	48 83 ec 58          	sub    rsp,0x58
    1223:	89 7d ac             	mov    DWORD PTR [rbp-0x54],edi
    1226:	48 89 75 a0          	mov    QWORD PTR [rbp-0x60],rsi
    122a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    1231:	00 00 
    1233:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    1237:	31 c0                	xor    eax,eax
    1239:	83 7d ac 02          	cmp    DWORD PTR [rbp-0x54],0x2
    123d:	74 16                	je     1255 <main+0x3f>
    123f:	48 8d 3d 05 0e 00 00 	lea    rdi,[rip+0xe05]        # 204b <_IO_stdin_used+0x4b>
    1246:	e8 25 fe ff ff       	call   1070 <puts@plt>
    124b:	b8 00 00 00 00       	mov    eax,0x0
    1250:	e9 9a 00 00 00       	jmp    12ef <main+0xd9>
    1255:	48 b8 77 7a 4a 43 50 	movabs rax,0x48426a50434a7a77
    125c:	6a 42 48 
    125f:	48 ba 42 73 48 41 6b 	movabs rdx,0x6162486b41487342
    1266:	48 62 61 
    1269:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    126d:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    1271:	48 b8 7a 6d 68 59 64 	movabs rax,0x7a6c666459686d7a
    1278:	66 6c 7a 
    127b:	48 ba 4c 64 68 61 70 	movabs rdx,0x455550706168644c
    1282:	50 55 45 
    1285:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    1289:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    128d:	c6 45 e0 00          	mov    BYTE PTR [rbp-0x20],0x0
    1291:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    1295:	48 89 c7             	mov    rdi,rax
    1298:	e8 e3 fd ff ff       	call   1080 <strlen@plt>
    129d:	89 c2                	mov    edx,eax
    129f:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    12a3:	48 89 c6             	mov    rsi,rax
    12a6:	89 d7                	mov    edi,edx
    12a8:	e8 dc fe ff ff       	call   1189 <val>
    12ad:	89 45 b8             	mov    DWORD PTR [rbp-0x48],eax
    12b0:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
    12b4:	48 83 c0 08          	add    rax,0x8
    12b8:	48 8b 18             	mov    rbx,QWORD PTR [rax]
    12bb:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
    12bf:	48 83 c0 08          	add    rax,0x8
    12c3:	48 8b 00             	mov    rax,QWORD PTR [rax]
    12c6:	48 89 c7             	mov    rdi,rax
    12c9:	e8 b2 fd ff ff       	call   1080 <strlen@plt>
    12ce:	48 89 de             	mov    rsi,rbx
    12d1:	89 c7                	mov    edi,eax
    12d3:	e8 b1 fe ff ff       	call   1189 <val>
    12d8:	89 45 bc             	mov    DWORD PTR [rbp-0x44],eax
    12db:	8b 55 bc             	mov    edx,DWORD PTR [rbp-0x44]
    12de:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
    12e1:	89 d6                	mov    esi,edx
    12e3:	89 c7                	mov    edi,eax
    12e5:	e8 e5 fe ff ff       	call   11cf <res>
    12ea:	b8 00 00 00 00       	mov    eax,0x0
    12ef:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    12f3:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
    12fa:	00 00 
    12fc:	74 05                	je     1303 <main+0xed>
    12fe:	e8 8d fd ff ff       	call   1090 <__stack_chk_fail@plt>
    1303:	48 83 c4 58          	add    rsp,0x58
    1307:	5b                   	pop    rbx
    1308:	5d                   	pop    rbp
    1309:	c3                   	ret    
    130a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000001310 <__libc_csu_init>:
    1310:	f3 0f 1e fa          	endbr64 
    1314:	41 57                	push   r15
    1316:	4c 8d 3d 8b 2a 00 00 	lea    r15,[rip+0x2a8b]        # 3da8 <__frame_dummy_init_array_entry>
    131d:	41 56                	push   r14
    131f:	49 89 d6             	mov    r14,rdx
    1322:	41 55                	push   r13
    1324:	49 89 f5             	mov    r13,rsi
    1327:	41 54                	push   r12
    1329:	41 89 fc             	mov    r12d,edi
    132c:	55                   	push   rbp
    132d:	48 8d 2d 7c 2a 00 00 	lea    rbp,[rip+0x2a7c]        # 3db0 <__do_global_dtors_aux_fini_array_entry>
    1334:	53                   	push   rbx
    1335:	4c 29 fd             	sub    rbp,r15
    1338:	48 83 ec 08          	sub    rsp,0x8
    133c:	e8 bf fc ff ff       	call   1000 <_init>
    1341:	48 c1 fd 03          	sar    rbp,0x3
    1345:	74 1f                	je     1366 <__libc_csu_init+0x56>
    1347:	31 db                	xor    ebx,ebx
    1349:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1350:	4c 89 f2             	mov    rdx,r14
    1353:	4c 89 ee             	mov    rsi,r13
    1356:	44 89 e7             	mov    edi,r12d
    1359:	41 ff 14 df          	call   QWORD PTR [r15+rbx*8]
    135d:	48 83 c3 01          	add    rbx,0x1
    1361:	48 39 dd             	cmp    rbp,rbx
    1364:	75 ea                	jne    1350 <__libc_csu_init+0x40>
    1366:	48 83 c4 08          	add    rsp,0x8
    136a:	5b                   	pop    rbx
    136b:	5d                   	pop    rbp
    136c:	41 5c                	pop    r12
    136e:	41 5d                	pop    r13
    1370:	41 5e                	pop    r14
    1372:	41 5f                	pop    r15
    1374:	c3                   	ret    
    1375:	66 66 2e 0f 1f 84 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    137c:	00 00 00 00 

0000000000001380 <__libc_csu_fini>:
    1380:	f3 0f 1e fa          	endbr64 
    1384:	c3                   	ret    

Disassembly of section .fini:

0000000000001388 <_fini>:
    1388:	f3 0f 1e fa          	endbr64 
    138c:	48 83 ec 08          	sub    rsp,0x8
    1390:	48 83 c4 08          	add    rsp,0x8
    1394:	c3                   	ret    
